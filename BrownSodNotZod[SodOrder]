//AUTHOR: Dustin Brown
//COURSE: CPT 187
//PURPOSE: Class for SodNotZod that sets and gets menu choices
//STARTDATE: 12/04/2019


package edu.cpt187.brown.participation;

public class SodOrder 
{
	//declare and initialize class constant
	private final double TAX_RATE = .075;
	private final double ZERO_TOTAL = 0.0;
	
	//declare and initialize non-constant class attributes\
	private int[] discountCounts;
	private int[] prizeCounts;
	private char discountType = ' ';
	private String itemName = "";
	private String discountName ="";
	private String prizeName = "";
	private double itemPrice = 0.0;
	private double discountRate = 0.0;
	private int itemID = 0;
	private int howMany = 0;
	private int lastItemSelectedIndex = 0;
	
	//Default constructor
	public SodOrder()
	{
	}//End of constructor
	
	//set item selection
	public void setItemSelection(int borrowedSearchIndex)
	{
		lastItemSelectedIndex = borrowedSearchIndex;
		
	}//End setItemSelection
	
	//set itemId
	public void setItemID(int[] borrowedItemIDs)
	{
		itemID = borrowedItemIDs[lastItemSelectedIndex];
	}//end setItemID
	
	//set item name
	public void setItemName(String[] borrowedItemNames)
	{
		itemName = borrowedItemNames[lastItemSelectedIndex];

	}//End of setItemName
	
	//set item price
	public void setItemPrice(double[] borrowedItemPrices)
	{
		itemPrice = borrowedItemPrices[lastItemSelectedIndex];
	}//End setItemPrice
	
	//set how many
	public void setHowMany(int borrowedHowMany)
	{
		howMany = borrowedHowMany;
	}//End setHowMany
	
	//set Discount Type
	public void setDiscountType(char borrowedMenuSelection)
	{
		discountType = borrowedMenuSelection; 
	}//End setDiscountType
	
	//set discount name
	public void setDiscountName(String[] borrowedDiscountNames)
	{
		//Initialize discountCounts if needed
		if (discountCounts == null)
		{
			discountCounts = new int[borrowedDiscountNames.length];
		}
		
		//set discountName and discountCounts
		if (discountType == 'A')
		{
			discountName = borrowedDiscountNames[0];
			discountCounts[0]++;
		}
		else if (discountType == 'B')
		{
			discountName = borrowedDiscountNames[1];
			discountCounts[1]++;
		}
		else
		{
			discountName = borrowedDiscountNames[2];
			discountCounts[2]++;
		}
	}//end setDiscountName
	
	//set discount price
	public void setDiscountRate(double[] borrowedDiscountRate)
	{
		if (discountType == 'A')
		{
			discountRate = borrowedDiscountRate[0];
		}
		else if (discountType == 'B')
		{
			discountRate = borrowedDiscountRate[1];
		}
		else
		{
			discountRate = borrowedDiscountRate[2];
		}
	}//End of setDiscountRate
	
	//set prize name
	public void setPrizeName(String[] borrowedPrizeNames, int borrowedPrizeIndex)
	{
		prizeName = borrowedPrizeNames[borrowedPrizeIndex];
		
		//Initialize prizeCounts if needed
		if (prizeCounts == null)
		{
			prizeCounts = new int[borrowedPrizeNames.length];
		}
		
		//Set and increment counters
		if (prizeName.equals(borrowedPrizeNames[0]))
		{
			prizeCounts[0]++;
		}
		else if (prizeName.equals(borrowedPrizeNames[1]))
		{
			prizeCounts[1]++;
		}
		else
		{
			prizeCounts[2]++;
		}
	}//End setPrizeName
	
	//set decrease in stock
	public void setDecreaseInStock(Inventory borrowedInventoryObject)
	{
		borrowedInventoryObject.setReduceStock(howMany);
	}//end setDecreaseInStock
	
	//return in stock count
	public int getInstockCount(int[] borrowedInStockCounts)
	{
		return borrowedInStockCounts[lastItemSelectedIndex];
	}//end getInStockCount
	
	//return ItemId
	public int getItemID()
	{
		return itemID;
	}//end getItemID
	
	//return itemName
	public String getItemName()
	{
		return itemName;
	}//end of getItemName
	
	//return itemPrice
	public double getItemPrice()
	{
		return itemPrice;
	}//end of getItemPrice
	
	//return how many
	public int getHowMany()
	{
		return howMany;
	}//end getHowMany
	
	//return discount name
	public String getDiscountName()
	{
		return discountName;
	}//End getDiscountName
	
	//return discount rate
	public double getDiscountRate()
	{
		return discountRate * 100;
	}//end of getDiscountRate
	
	//return discount amount
	public double getDiscountAmt()
	{
		return discountRate * itemPrice;
	}//End getDiscountAmt
	
	//return discount price
	public double getDiscountPrice()
	{
		return itemPrice - getDiscountAmt();
	}//End getDiscountPrice
		
	//return discount counts
	public int[] getDiscountCounts()
	{
		return discountCounts;
	}//end getDiscountCounts
	
	//Return prize name
	public String getPrizeName()
	{
		return prizeName;
	}//End getprizeName
	
	//return prize count
	public int[] getPrizeCounts()
	{
		return prizeCounts;
	}//End getPrizeCounts
		
	//returns sub total
	public double getSubTotal()
	{
		return howMany * getDiscountPrice();
	}//End getSubTotal
	
	//returns tax rate
	public double getTaxRate()
	{
		return TAX_RATE * 100;
	}//End getTaxRate
	
	//returns tax amount
	public double getTaxAmt()
	{
		return getSubTotal() * TAX_RATE;
	}//End getTaxAmt
	
	//return total cost
	public double getTotalCost()
	{
		if (discountName.equals(""))
		{	
			return ZERO_TOTAL;
		}
		else
		{
			return getSubTotal() + getTaxAmt();
		}
	}//End getTotalCost
}
